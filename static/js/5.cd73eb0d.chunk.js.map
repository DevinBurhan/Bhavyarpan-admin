{"version":3,"sources":["components/checkbox/style.js","components/checkbox/checkbox.js","container/profile/authentication/overview/SignIn.js"],"names":["CheckboxStyle","Styled","_Checkbox","_templateObject","_taggedTemplateLiteral","Group","SignIn","history","useHistory","dispatch","useDispatch","isLoading","useSelector","state","auth","loading","form","_Form","useForm","React","createElement","AuthWrapper","className","NavLink","to","name","onFinish","async","login","value","push","layout","Heading","as","Item","rules","message","required","initialValue","label","_Input","Password","placeholder","_Button","htmlType","type","size"],"mappings":"kSAGA,MAAMA,EAAgBC,YAAMC,IAAND,CAAgBE,MAAAC,YAAA,YCEhBJ,EAAcK,MC8DrBC,UA1DAA,KACX,MAAMC,EAAUC,uBACVC,EAAWC,cACXC,EAAYC,YAAaC,GAAUA,EAAMC,KAAKC,UAC7CC,GAAQC,IAAKC,UAYpB,OACIC,IAAAC,cAACC,IAAW,KACRF,IAAAC,cAAA,KAAGE,UAAU,eAAc,+BACMH,IAAAC,cAACG,IAAO,CAACC,GAAG,aAAY,gBAEzDL,IAAAC,cAAA,OAAKE,UAAU,iBACXH,IAAAC,cAAAH,IAAA,CAAMQ,KAAK,QAAQT,KAAMA,EAAMU,SAhBtBC,gBAIAlB,EAASmB,YAAMC,KAE5BtB,EAAQuB,KAAK,WAU8CC,OAAO,YAC1DZ,IAAAC,cAACY,IAAO,CAACC,GAAG,MAAK,cACFd,IAAAC,cAAA,QAAME,UAAU,mBAAkB,WAEjDH,IAAAC,cAAAH,IAAMiB,KAAI,CACNT,KAAK,QACLU,MAAO,CACH,CACIC,QAAS,2BACTC,UAAU,IAGlBC,aAAa,mBACbC,MAAM,6BAENpB,IAAAC,cAAAoB,IAAA,OAEJrB,IAAAC,cAAAH,IAAMiB,KAAI,CAACT,KAAK,WAAWa,aAAa,SAASC,MAAM,YACnDpB,IAAAC,cAAAoB,IAAOC,SAAQ,CAACC,YAAY,cAEhCvB,IAAAC,cAAA,OAAKE,UAAU,oBACXH,IAAAC,cAACG,IAAO,CAACD,UAAU,mBAAmBE,GAAG,mBAAkB,qBAI/DL,IAAAC,cAAAH,IAAMiB,KAAI,KACNf,IAAAC,cAAAuB,IAAA,CAAQrB,UAAU,aAAasB,SAAS,SAASC,KAAK,UAAUC,KAAK,SAChEnC,EAAY,aAAe","file":"static/js/5.cd73eb0d.chunk.js","sourcesContent":["import Styled from 'styled-components';\nimport { Checkbox } from 'antd';\n\nconst CheckboxStyle = Styled(Checkbox)`\n\n`;\n\nexport { CheckboxStyle };\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckboxStyle } from './style';\n\nconst CheckboxGroup = CheckboxStyle.Group;\n\nconst Checkbox = props => {\n  const { item, defaultSelect, multiple, onChange, onChangeTriger, defaultChecked, disabled, children } = props;\n  const plainOptions = item;\n\n  const [state, setState] = useState({\n    checkedList: defaultSelect,\n    indeterminate: true,\n    checkAll: false,\n  });\n\n  const onMultiChange = checkedList => {\n    setState({\n      checkedList,\n      indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\n      checkAll: checkedList.length === plainOptions.length,\n    });\n  };\n\n  useEffect(() => {\n    if (onChangeTriger) {\n      onChangeTriger(state.checkedList);\n    }\n    // eslint-disable-next-line\n  }, [state]);\n\n  const onCheckAllChange = e => {\n    setState({\n      checkedList: e.target.checked ? plainOptions : [],\n      indeterminate: false,\n      checkAll: e.target.checked,\n    });\n  };\n\n  const onChecked = e => {\n    return onChange(e.target.checked, e.target.value);\n  };\n\n  return !multiple ? (\n    <CheckboxStyle onChange={onChecked} defaultChecked={defaultChecked} disabled={disabled}>\n      {children}\n    </CheckboxStyle>\n  ) : (\n    <div>\n      <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n        <CheckboxStyle indeterminate={state.indeterminate} onChange={onCheckAllChange} checked={state.checkAll}>\n          Check all\n        </CheckboxStyle>\n      </div>\n      <br />\n      <CheckboxGroup options={plainOptions} value={state.checkedList} onChange={onMultiChange} />\n    </div>\n  );\n};\n\nCheckbox.propTypes = {\n  item: PropTypes.arrayOf(PropTypes.string),\n  defaultSelect: PropTypes.array,\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  onChangeTriger: PropTypes.func,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nexport { Checkbox, CheckboxGroup };\n","import React, { useCallback } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Form, Input, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthWrapper } from \"./style\";\nimport { login } from \"../../../../redux/authentication/actionCreator\";\nimport Heading from \"../../../../components/heading/heading\";\nimport { Checkbox } from \"../../../../components/checkbox/checkbox\";\n\nconst SignIn = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const isLoading = useSelector((state) => state.auth.loading);\n    const [form] = Form.useForm();\n\n    const handleSubmit = async (value) => {\n        // const form_data = new FormData();\n        // form_data.append(\"email\", value.email);\n        // form_data.append(\"password\", value.password);\n        let resp = await dispatch(login(value));\n        if (resp) {\n            history.push(\"/admin\");\n        }\n    };\n\n    return (\n        <AuthWrapper>\n            <p className=\"auth-notice\">\n                Don&rsquo;t have an account? <NavLink to=\"/register\">Sign up now</NavLink>\n            </p>\n            <div className=\"auth-contents\">\n                <Form name=\"login\" form={form} onFinish={handleSubmit} layout=\"vertical\">\n                    <Heading as=\"h3\">\n                        Sign in to <span className=\"color-secondary\">Vendor</span>\n                    </Heading>\n                    <Form.Item\n                        name=\"email\"\n                        rules={[\n                            {\n                                message: \"Please input your Email!\",\n                                required: true,\n                            },\n                        ]}\n                        initialValue=\"name@example.com\"\n                        label=\"Username or Email Address\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name=\"password\" initialValue=\"123456\" label=\"Password\">\n                        <Input.Password placeholder=\"Password\" />\n                    </Form.Item>\n                    <div className=\"auth-form-action\">\n                        <NavLink className=\"forgot-pass-link\" to=\"/forgotPassword\">\n                            Forgot password?\n                        </NavLink>\n                    </div>\n                    <Form.Item>\n                        <Button className=\"btn-signin\" htmlType=\"submit\" type=\"primary\" size=\"large\">\n                            {isLoading ? \"Loading...\" : \"Log In\"}\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </AuthWrapper>\n    );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}